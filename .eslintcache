[{"D:\\Assignment\\task-management\\src\\index.js":"1","D:\\Assignment\\task-management\\src\\App.js":"2","D:\\Assignment\\task-management\\src\\reportWebVitals.js":"3","D:\\Assignment\\task-management\\src\\components\\TaskBoard\\TaskBoard.js":"4","D:\\Assignment\\task-management\\src\\components\\List\\List.js":"5","D:\\Assignment\\task-management\\src\\components\\Card\\Card.js":"6","D:\\Assignment\\task-management\\src\\components\\Modal\\Modal.js":"7","D:\\Assignment\\task-management\\src\\components\\DeleteForm\\DeleteForm.js":"8","D:\\Assignment\\task-management\\src\\components\\AddListForm\\AddListForm.js":"9","D:\\Assignment\\task-management\\src\\components\\AddTaskForm\\AddTaskForm.js":"10","D:\\Assignment\\task-management\\src\\helpers\\getLocalStorageData.js":"11","D:\\Assignment\\task-management\\src\\helpers\\methods.js":"12","D:\\Task-Management-App\\src\\index.js":"13","D:\\Task-Management-App\\src\\App.js":"14","D:\\Task-Management-App\\src\\reportWebVitals.js":"15","D:\\Task-Management-App\\src\\components\\TaskBoard\\TaskBoard.js":"16","D:\\Task-Management-App\\src\\components\\Modal\\Modal.js":"17","D:\\Task-Management-App\\src\\components\\AddListForm\\AddListForm.js":"18","D:\\Task-Management-App\\src\\components\\List\\List.js":"19","D:\\Task-Management-App\\src\\components\\Card\\Card.js":"20","D:\\Task-Management-App\\src\\components\\DeleteForm\\DeleteForm.js":"21","D:\\Task-Management-App\\src\\components\\AddTaskForm\\AddTaskForm.js":"22"},{"size":500,"mtime":499162500000,"results":"23","hashOfConfig":"24"},{"size":154,"mtime":1609355796815,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"24"},{"size":9631,"mtime":1609738687618,"results":"27","hashOfConfig":"24"},{"size":3285,"mtime":1609734139414,"results":"28","hashOfConfig":"24"},{"size":2622,"mtime":1609676932858,"results":"29","hashOfConfig":"24"},{"size":523,"mtime":1609738735817,"results":"30","hashOfConfig":"24"},{"size":923,"mtime":1609694561750,"results":"31","hashOfConfig":"24"},{"size":2638,"mtime":1609738731564,"results":"32","hashOfConfig":"24"},{"size":3512,"mtime":1609677743738,"results":"33","hashOfConfig":"24"},{"size":277,"mtime":1609676601018,"results":"34","hashOfConfig":"24"},{"size":180,"mtime":1609735524318,"results":"35","hashOfConfig":"24"},{"size":500,"mtime":499162500000,"results":"36","hashOfConfig":"37"},{"size":154,"mtime":1609355796815,"results":"38","hashOfConfig":"37"},{"size":362,"mtime":499162500000,"results":"39","hashOfConfig":"37"},{"size":9735,"mtime":1609833412615,"results":"40","hashOfConfig":"37"},{"size":514,"mtime":1609780119325,"results":"41","hashOfConfig":"37"},{"size":2485,"mtime":1609825697066,"results":"42","hashOfConfig":"37"},{"size":3458,"mtime":1609815303808,"results":"43","hashOfConfig":"37"},{"size":2749,"mtime":1609814698595,"results":"44","hashOfConfig":"37"},{"size":923,"mtime":1609778741136,"results":"45","hashOfConfig":"37"},{"size":3360,"mtime":1609814737790,"results":"46","hashOfConfig":"37"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"yld6tm",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"ke3p08",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Assignment\\task-management\\src\\index.js",[],["94","95"],"D:\\Assignment\\task-management\\src\\App.js",[],"D:\\Assignment\\task-management\\src\\reportWebVitals.js",[],"D:\\Assignment\\task-management\\src\\components\\TaskBoard\\TaskBoard.js",["96","97"],"D:\\Assignment\\task-management\\src\\components\\List\\List.js",[],"D:\\Assignment\\task-management\\src\\components\\Card\\Card.js",[],"D:\\Assignment\\task-management\\src\\components\\Modal\\Modal.js",[],"D:\\Assignment\\task-management\\src\\components\\DeleteForm\\DeleteForm.js",[],"D:\\Assignment\\task-management\\src\\components\\AddListForm\\AddListForm.js",[],"D:\\Assignment\\task-management\\src\\components\\AddTaskForm\\AddTaskForm.js",[],"D:\\Assignment\\task-management\\src\\helpers\\getLocalStorageData.js",[],"D:\\Assignment\\task-management\\src\\helpers\\methods.js",[],"D:\\Task-Management-App\\src\\index.js",[],["98","99"],"D:\\Task-Management-App\\src\\App.js",[],"D:\\Task-Management-App\\src\\reportWebVitals.js",[],"D:\\Task-Management-App\\src\\components\\TaskBoard\\TaskBoard.js",["100","101"],"import React, { Component } from 'react';\r\nimport './TaskBoard.scss';\r\nimport List from '../List/List';\r\nimport Modal from '../Modal/Modal'\r\nimport AddListForm from '../AddListForm/AddListForm'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlusSquare } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default class TaskBoard extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            lists:[\r\n                {\r\n                    name: 'TO DO',\r\n                    listId: 0,\r\n                    cards: [{\r\n                        taskName: 'Pay Electricity Bill',\r\n                        list: 0,\r\n                        taskId: 0\r\n                    },\r\n                    {\r\n                        taskName: 'Make Grocery List',\r\n                        list: 0,\r\n                        taskId: 1\r\n                    }]\r\n                },\r\n                {\r\n                    name: 'In Progress',\r\n                    listId: 1,\r\n                    cards: [{\r\n                        taskName: 'Iron Cloths',\r\n                        list: 1,\r\n                        taskId: 0\r\n                    },]\r\n                },\r\n                {\r\n                    name: 'Done',\r\n                    listId: 2,\r\n                    cards: [{\r\n                        taskName: 'Buy Running Shoes',\r\n                        list: 2,\r\n                        taskId: 0\r\n                    }]\r\n                }\r\n            ],\r\n            show: false,\r\n            taskdragInfo: \"\",\r\n            listdragInfo: \"\"\r\n        }\r\n\r\n        this.handleKeyPress = this.handleKeyPress.bind(this);\r\n        \r\n    }\r\n\r\n    componentDidMount(){\r\n        const localStorageData = localStorage.getItem('lists');\r\n        if(localStorageData){\r\n            this.setState({\r\n                lists: JSON.parse(localStorageData)\r\n            })\r\n        }\r\n        const themeColor = localStorage.getItem('themeColor');\r\n        document.documentElement.style.setProperty('--color', JSON.parse(themeColor));\r\n        document.addEventListener('keydown', this.handleKeyPress);\r\n    }\r\n\r\n    handleKeyPress(event) {\r\n        if (event.keyCode === 13) {\r\n            document.activeElement.click();\r\n        }\r\n      }\r\n\r\n    changeTheme = (color) =>{\r\n        document.documentElement.style.setProperty('--color', color);\r\n        localStorage.setItem('themeColor', JSON.stringify(color))\r\n    }\r\n    \r\n\r\n  onTaskDragStart = (event, listID) => {\r\n    event.stopPropagation();\r\n    const taskdragInfo = {\r\n      taskId: event.currentTarget.id,\r\n      listID: listID\r\n    }\r\n    this.setState({\r\n        taskdragInfo\r\n    })\r\n  }\r\n\r\n  onTaskDragOver = (event) => {\r\n    event.preventDefault();\r\n  }\r\n\r\n  onTaskDrop = (event, listID) => {\r\n    event.stopPropagation();\r\n    const { lists, taskdragInfo } = this.state\r\n    var cardsArray = []\r\n    for (var i = 0; i < lists.length; i++) {\r\n        if(parseInt(taskdragInfo.listID) === lists[i].listId){\r\n            cardsArray = lists[i].cards\r\n        }\r\n    }\r\n    const taskCard = cardsArray.find(card => card.taskId === parseInt(taskdragInfo.taskId))\r\n    const indexOfCard = cardsArray.findIndex(card => card.taskId === parseInt(taskdragInfo.taskId))\r\n    for (var i = 0; i < lists.length; i++) {\r\n        if(parseInt(taskdragInfo.listID) === lists[i].listId){\r\n            lists[i].cards.splice(indexOfCard, 1)\r\n        }\r\n    }\r\n    for (var i = 0; i < lists.length; i++) {\r\n        if(parseInt(listID) === lists[i].listId){\r\n            lists[i].cards.push({...taskCard, list: parseInt(listID), taskId: new Date().valueOf() });\r\n        }\r\n    }\r\n    this.setState({\r\n      lists\r\n    });\r\n    localStorage.setItem('lists', JSON.stringify(lists));\r\n    \r\n  }\r\n\r\n  onListDragStart = (event, listID) => {\r\n    const listdragInfo = {\r\n      listID: listID\r\n    }\r\n    this.setState({\r\n        listdragInfo\r\n    })\r\n  }\r\n\r\n  onListDragOver = (event, listId) => {\r\n    event.preventDefault();\r\n  }\r\n\r\n  onListDrop = (event, listID) =>{\r\n    const { lists, listdragInfo } = this.state\r\n    var updatedparsedData =  lists.filter(list => list.listId !== parseInt(listdragInfo.listID))\r\n    const taskList = lists.find(list => list.listId === parseInt(listdragInfo.listID))\r\n    const indexOfList = lists.findIndex(list => list.listId === parseInt(listID))\r\n    updatedparsedData.splice(indexOfList, 0, taskList)\r\n    this.setState({\r\n        lists: updatedparsedData\r\n      });\r\n      localStorage.setItem('lists', JSON.stringify(updatedparsedData));\r\n\r\n  }\r\n\r\n    addList(name){\r\n        const { lists } = this.state\r\n        const newList = {\r\n            name: name,\r\n            listId: new Date().valueOf(),\r\n            cards: []\r\n        }\r\n        lists.push(newList)\r\n        this.setState({\r\n            lists\r\n        })\r\n        localStorage.setItem('lists', JSON.stringify(lists))\r\n    }\r\n\r\n    editList(name, listId){\r\n        const { lists } = this.state\r\n        for (var i = 0; i < lists.length; i++) {\r\n            if(listId === lists[i].listId){\r\n                lists[i].name = name ;\r\n            }\r\n          }\r\n          this.setState({\r\n            lists\r\n        })\r\n        localStorage.setItem('lists', JSON.stringify(lists))\r\n    }\r\n\r\n    DeleteList(listId){\r\n        const { lists } = this.state\r\n        const updatedList = lists.filter(list => list.listId !== listId)\r\n          this.setState({\r\n            lists: updatedList\r\n        })\r\n        localStorage.setItem('lists', JSON.stringify(updatedList))\r\n    }\r\n\r\n    addTask(taskName, listId){\r\n        const { lists } = this.state\r\n        const newTask = {\r\n            taskName,\r\n            list: listId,\r\n            taskId: new Date().valueOf()\r\n        }\r\n        for (var i = 0; i < lists.length; i++) {\r\n            if(listId === lists[i].listId){\r\n                lists[i].cards.push(newTask);\r\n            }\r\n        }\r\n        this.setState({\r\n            lists\r\n        })\r\n        localStorage.setItem('lists', JSON.stringify(lists))\r\n    }\r\n\r\n    editTask(taskName, listId, taskId){\r\n        const { lists } = this.state\r\n        for (var i = 0; i < lists.length; i++) {\r\n            if(listId === lists[i].listId){\r\n                for (var j = 0; j < lists[i].cards.length; j++) {\r\n                    if(lists[i].cards[j].taskId === taskId){\r\n                        lists[i].cards[j].taskName = taskName \r\n                    }\r\n                }\r\n            }\r\n          }\r\n          this.setState({\r\n            lists\r\n        })\r\n        localStorage.setItem('lists', JSON.stringify(lists))\r\n    }\r\n\r\n    DeleteTask(listId, taskId){\r\n        const { lists } = this.state\r\n        for (var i = 0; i < lists.length; i++) {\r\n            if(listId === lists[i].listId){\r\n                for (var j = 0; j < lists[i].cards.length; j++) {\r\n                    if(lists[i].cards[j].taskId === taskId){\r\n                        lists[i].cards =  lists[i].cards.filter(card => card.taskId !== taskId)\r\n                    }\r\n                }\r\n            }\r\n          }\r\n          this.setState({\r\n            lists\r\n        })\r\n        localStorage.setItem('lists', JSON.stringify(lists))\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({ show: true });\r\n      };\r\n    \r\n      hideModal = () => {\r\n        this.setState({ show: false });\r\n        window.location.reload();\r\n      };\r\n\r\n    render() {\r\n        const lists = this.state.lists.map((list, index) => (\r\n            <li key={index} className=\"wrapper\" onDragOver={(event, listId)=>this.onListDragOver(event, list.listId)} onDrop={(event)=>this.onListDrop(event, list.listId)} tabIndex=\"0\">\r\n                <List list={list}\r\n                addList={(name) => this.addList(name)}\r\n                editList={(name, listId) => this.editList(name, listId)}\r\n                DeleteList={(listId) => this.DeleteList(listId)}\r\n\r\n                addTask={(taskName, listId) => this.addTask(taskName, listId)}\r\n                editTask={(taskName, listId, taskId) => this.editTask(taskName, listId, taskId)}\r\n                DeleteTask={(listId, taskId) => this.DeleteTask(listId, taskId)}\r\n\r\n                onTaskDragStart={(event) => this.onTaskDragStart(event, list.listId)}\r\n                onTaskDragOver={(event) => this.onTaskDragOver(event)} \r\n                onTaskDrop={(event) => {this.onTaskDrop(event, list.listId)}}\r\n                \r\n                onListDragStart={(event) => {this.onListDragStart(event, list.listId)}}\r\n                />\r\n            </li>\r\n        ));\r\n\r\n        return (\r\n            <div className=\"taskBoard\">\r\n                <div className=\"main-header\">\r\n                    <h1>Task Management Board</h1>\r\n                    <div className=\"sub-header\">\r\n                        <ul>\r\n                            <li className=\"colors\" id=\"blue\" onClick={() => this.changeTheme('#227fba')} tabIndex=\"0\"></li>\r\n                            <li className=\"colors\" id=\"yellow\" onClick={()=>this.changeTheme('#f59e01')} tabIndex=\"0\"></li>\r\n                            <li className=\"colors\" id=\"purple\" onClick={()=>this.changeTheme('#540073')} tabIndex=\"0\"></li>\r\n                        </ul>\r\n                        <button id=\"add-list\" onClick={this.showModal}><FontAwesomeIcon icon={faPlusSquare}/></button>\r\n                    </div>\r\n                    </div>\r\n                <ul className=\"lists\" id=\"list\">{lists}</ul>\r\n                <Modal show={this.state.show} handleClose={this.hideModal}>\r\n                    <AddListForm lists={this.state.lists} addList={(name) => this.addList(name)} hideModal={this.hideModal}/>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\Task-Management-App\\src\\components\\Modal\\Modal.js",[],"D:\\Task-Management-App\\src\\components\\AddListForm\\AddListForm.js",[],"D:\\Task-Management-App\\src\\components\\List\\List.js",[],"D:\\Task-Management-App\\src\\components\\Card\\Card.js",[],"D:\\Task-Management-App\\src\\components\\DeleteForm\\DeleteForm.js",[],"D:\\Task-Management-App\\src\\components\\AddTaskForm\\AddTaskForm.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":105,"column":14,"nodeType":"108","messageId":"109","endLine":105,"endColumn":15},{"ruleId":"106","severity":1,"message":"107","line":110,"column":14,"nodeType":"108","messageId":"109","endLine":110,"endColumn":15},{"ruleId":"102","replacedBy":"110"},{"ruleId":"104","replacedBy":"111"},{"ruleId":"106","severity":1,"message":"107","line":106,"column":14,"nodeType":"108","messageId":"109","endLine":106,"endColumn":15},{"ruleId":"106","severity":1,"message":"107","line":111,"column":14,"nodeType":"108","messageId":"109","endLine":111,"endColumn":15},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-redeclare","'i' is already defined.","Identifier","redeclared",["112"],["113"],"no-global-assign","no-unsafe-negation"]